name: Client

on:
  push:
    branches:
      - main
    paths:
      - "packages/client/**"
      - ".github/workflows/client.yml"

defaults:
  run:
    working-directory: packages/client

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node version
        uses: actions/setup-node@v3
        with:
          node-version-file: ".node-version"
      - name: Node modules cache
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: |
            .yarn-meta
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-node-${{ steps.node-version.outputs.NODE_VERSION }}-${{ hashFiles('**/yarn.lock') }}
      - name: Install
        run: yarn ci:install
      - name: Lint
        run: yarn lint

  ts-check:
    name: ts-check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node version
        uses: actions/setup-node@v3
        with:
          node-version-file: ".node-version"
      - name: Node modules cache
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: |
            .yarn-meta
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-node-${{ steps.node-version.outputs.NODE_VERSION }}-${{ hashFiles('**/yarn.lock') }}
      - name: Install
        run: yarn ci:install
      - name: ts-check
        run: yarn ts-check

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node version
        uses: actions/setup-node@v3
        with:
          node-version-file: ".node-version"
      - name: Node modules cache
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: |
            .yarn-meta
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-node-${{ steps.node-version.outputs.NODE_VERSION }}-${{ hashFiles('**/yarn.lock') }}
      - name: Install
        run: yarn ci:install
      - name: Test
        run: yarn test

  build:
    name: Build
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
      - ts-check
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node version
        uses: actions/setup-node@v3
        with:
          node-version-file: ".node-version"
      - name: Node modules cache
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: |
            .yarn-meta
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-node-${{ steps.node-version.outputs.NODE_VERSION }}-${{ hashFiles('**/yarn.lock') }}
      - name: Build
        run: yarn ci:build
        env:
          REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
      - uses: actions/upload-artifact@v2
        with:
          name: build
          path: packages/client/build

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: build
          path: packages/client/build
      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: "packages/client/build"
          production-branch: main
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: false
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1
