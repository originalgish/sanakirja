name: Server

on:
  push:
    branches:
      - main
    paths:
      - "packages/server/**"
      - ".github/workflows/server.yml"

defaults:
  run:
    working-directory: packages/server

jobs:
  install:
    name: Install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node version
        uses: actions/setup-node@v3
        with:
          node-version-file: ".node-version"
      - name: Node modules cache
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: |
            .yarn-meta
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-node-${{ steps.node-version.outputs.NODE_VERSION }}-${{ hashFiles('**/yarn.lock') }}
      - name: Install
        run: yarn ci:install

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node version
        uses: actions/setup-node@v3
        with:
          node-version-file: ".node-version"
      - name: Node modules cache
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: |
            .yarn-meta
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-node-${{ steps.node-version.outputs.NODE_VERSION }}-${{ hashFiles('**/yarn.lock') }}
      - name: Lint
        run: yarn lint

  ts-check:
    name: ts-check
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node version
        uses: actions/setup-node@v3
        with:
          node-version-file: ".node-version"
      - name: Node modules cache
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: |
            .yarn-meta
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-node-${{ steps.node-version.outputs.NODE_VERSION }}-${{ hashFiles('**/yarn.lock') }}
      - name: ts-check
        run: yarn ts-check

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node version
        uses: actions/setup-node@v3
        with:
          node-version-file: ".node-version"
      - name: Node modules cache
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: |
            .yarn-meta
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-node-${{ steps.node-version.outputs.NODE_VERSION }}-${{ hashFiles('**/yarn.lock') }}
      - name: Test
        run: yarn test

  build:
    name: Build
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
      - ts-check
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node version
        uses: actions/setup-node@v3
        with:
          node-version-file: ".node-version"
      - name: Node modules cache
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: |
            .yarn-meta
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-node-${{ steps.node-version.outputs.NODE_VERSION }}-${{ hashFiles('**/yarn.lock') }}
      - name: Build
        run: yarn ci:build
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: packages/server/dist

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/dowload-artifact@v3
        with:
          name: dist
          path: packages/server/dist

      - name: Deploy server to Heroku
        uses: akhileshns/heroku-deploy@v3.12.13
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          appdir: "packages/server"
          branch: main
